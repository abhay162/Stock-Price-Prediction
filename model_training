import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import numpy as np
import joblib  # To save the trained model
from preprocess import preprocess_data  # Import the preprocessing function

# Load and preprocess the data
data = pd.read_csv('data/raw/stock_data.csv')
data = preprocess_data(data)

# Define features and target variable
X = data[['Open', 'High', 'Low', 'Volume', 'MA50', 'MA200']]
y = data['Close']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Save the trained model
joblib.dump(model, 'results/linear_regression_model.pkl')

# Make predictions and evaluate the model
predictions = model.predict(X_test)
mse = mean_squared_error(y_test, predictions)
print(f'Mean Squared Error: {mse:.2f}')
